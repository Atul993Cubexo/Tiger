<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="2" total="5" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="76325" started-at="2019-02-13T18:33:40Z" finished-at="2019-02-13T18:34:56Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="76325" started-at="2019-02-13T18:33:40Z" finished-at="2019-02-13T18:34:56Z">
      <class name="script.CheckIssueDate">
        <test-method status="PASS" signature="openApplication()[pri:0, instance:script.CheckIssueDate@27efef64]" name="openApplication" is-config="true" duration-ms="4453" started-at="2019-02-13T18:34:41Z" finished-at="2019-02-13T18:34:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="testVerifyIssueDate()[pri:3, instance:script.CheckIssueDate@27efef64]" name="testVerifyIssueDate" duration-ms="10557" started-at="2019-02-13T18:34:45Z" finished-at="2019-02-13T18:34:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testVerifyIssueDate -->
        <test-method status="PASS" signature="closeApplication(org.testng.ITestResult)[pri:0, instance:script.CheckIssueDate@27efef64]" name="closeApplication" is-config="true" duration-ms="404" started-at="2019-02-13T18:34:56Z" finished-at="2019-02-13T18:34:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testVerifyIssueDate status=SUCCESS method=CheckIssueDate.testVerifyIssueDate()[pri:3, instance:script.CheckIssueDate@27efef64] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
        <test-method status="PASS" signature="writeReport()[pri:0, instance:script.CheckIssueDate@27efef64]" name="writeReport" is-config="true" duration-ms="933" started-at="2019-02-13T18:34:57Z" finished-at="2019-02-13T18:34:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- writeReport -->
      </class> <!-- script.CheckIssueDate -->
      <class name="script.InvalidLogin">
        <test-method status="PASS" signature="openApplication()[pri:0, instance:script.InvalidLogin@6f7fd0e6]" name="openApplication" is-config="true" duration-ms="4107" started-at="2019-02-13T18:34:27Z" finished-at="2019-02-13T18:34:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="FAIL" signature="testInvalidLogin()[pri:2, instance:script.InvalidLogin@6f7fd0e6]" name="testInvalidLogin" duration-ms="8836" started-at="2019-02-13T18:34:31Z" finished-at="2019-02-13T18:34:40Z">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for title to contain "actiTIME - Enter Time-Track". Current title: "actiTIME - Login" (tried for 8 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'WIN7-PC', ip: '127.0.0.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.44.609538 (b655c5a60b0b54..., userDataDir: C:\Users\win7\AppData\Local...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:49246}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 72.0.3626.81, webStorageEnabled: true}
Session ID: d6ff5b195516ffb436b5563023b97c1e]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for title to contain "actiTIME - Enter Time-Track". Current title: "actiTIME - Login" (tried for 8 second(s) with 500 milliseconds interval)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'WIN7-PC', ip: '127.0.0.1', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_181'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, acceptSslCerts: false, applicationCacheEnabled: false, browserConnectionEnabled: false, browserName: chrome, chrome: {chromedriverVersion: 2.44.609538 (b655c5a60b0b54..., userDataDir: C:\Users\win7\AppData\Local...}, cssSelectorsEnabled: true, databaseEnabled: false, goog:chromeOptions: {debuggerAddress: localhost:49246}, handlesAlerts: true, hasTouchScreen: false, javascriptEnabled: true, locationContextEnabled: true, mobileEmulationEnabled: false, nativeEvents: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: XP, platformName: XP, rotatable: false, setWindowRect: true, takesHeapSnapshot: true, takesScreenshot: true, unexpectedAlertBehaviour: ignore, unhandledPromptBehavior: ignore, version: 72.0.3626.81, webStorageEnabled: true}
Session ID: d6ff5b195516ffb436b5563023b97c1e
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at page.TimeTrackPage.verifyHomePageDisplayed(TimeTrackPage.java:43)
at script.InvalidLogin.testInvalidLogin(InvalidLogin.java:31)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:580)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:716)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:988)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method status="PASS" signature="closeApplication(org.testng.ITestResult)[pri:0, instance:script.InvalidLogin@6f7fd0e6]" name="closeApplication" is-config="true" duration-ms="865" started-at="2019-02-13T18:34:40Z" finished-at="2019-02-13T18:34:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidLogin status=FAILURE method=InvalidLogin.testInvalidLogin()[pri:2, instance:script.InvalidLogin@6f7fd0e6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
      </class> <!-- script.InvalidLogin -->
      <class name="script.ValidLogin">
        <test-method status="PASS" signature="openApplication()[pri:0, instance:script.ValidLogin@47c62251]" name="openApplication" is-config="true" duration-ms="31175" started-at="2019-02-13T18:33:40Z" finished-at="2019-02-13T18:34:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApplication -->
        <test-method status="PASS" signature="testValidLogin()[pri:1, instance:script.ValidLogin@47c62251]" name="testValidLogin" duration-ms="13493" started-at="2019-02-13T18:34:11Z" finished-at="2019-02-13T18:34:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method status="PASS" signature="closeApplication(org.testng.ITestResult)[pri:0, instance:script.ValidLogin@47c62251]" name="closeApplication" is-config="true" duration-ms="2316" started-at="2019-02-13T18:34:25Z" finished-at="2019-02-13T18:34:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidLogin status=SUCCESS method=ValidLogin.testValidLogin()[pri:1, instance:script.ValidLogin@47c62251] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApplication -->
      </class> <!-- script.ValidLogin -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
